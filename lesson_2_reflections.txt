What happens when you initialize a repository? Why do you need to do it?

When you initialize a repository using git, a .git folder is created which stores meta data about the repository. Inititalizaing the repository allows you to start saving commits which is initially 0. Also files will have to be added to be tracked, git needs to know which files to commit.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

The staging area is an intermediate area which allows you to group files together to prepare for a commit. The staging area can contain some or all the files from the working directory and these are files which have not been added to the repository yet. This allows you flexibility in what files you decide to commit; you can change your mind and change the files which you want to commit.

How can you use the staging area to make sure you have one commit per logical
change?

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?